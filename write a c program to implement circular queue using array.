//ciircular queue using array
//it follow fifo
#include<stdio.h>
#define max 5
int a[max];
int front=-1,rear=-1;
void enqueue(int d)
{
    if((front==rear+1)||(rear==max-1&&front==0))
    {
        printf("\nqueue is overflow.");
    }
    else
    {
        if(front==-1)
        {
            front=0;
        }
        rear=(rear+1)%max;
        a[rear]=d;
        printf("\nelement is inserted .");
    }
}
void dequeue()
{
    if(front==-1)
    {
        printf("\nqueue is empty.");
    }
    else
    {int d;
        if(front==rear)
        {
            d=front;
            front=-1;
            rear=-1;
          printf("\ndeleted element is :%d",a[d]);  
        }
        else
       { printf("\ndeleted element is :%d",a[front]);
        front=(front+1)%max;}
    }
}
void display()
{int i;
    if(front==-1)
    {
        printf("\n queue is empty.");
    }
    else
    {
        printf("\n elements in queue :");
    for( i=front;i!=rear;i= (i + 1) % max)
    {
        printf("%d\t",a[i]);
    }
    printf("%d",a[i]);
    }
}
int main()
{int ch,data;
while(1)
{
   printf("\nenter 1.enqueue\n2.dequeeue\n3.display\n4.exit");
   printf("\nenter your choice :");
   scanf("%d",&ch);
   if(ch==4)break;
   switch(ch)
   {
       case 1:
       printf("\nenter the  data :");
       scanf("%d",&data);
       enqueue(data);
       break;
       case 2:
       dequeue();
       break;
       case 3:
       display();
       break;
       default:
       printf("\nenter the valiid choice.");
       break;
   }
}
    return 0;
}

// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :1

// enter the  data :1

// element is inserted .
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :1

// enter the  data :21

// element is inserted .
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :1

// enter the  data :3

// element is inserted .
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :1

// enter the  data :4

// element is inserted .
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :1

// enter the  data :5

// element is inserted .
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :1

// enter the  data :6

// queue is overflow.
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :3

//  elements in queue :1	2	3	4	5
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :2

// deleted element is :1
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :2

// deleted element is :2
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :1

// enter the  data :76

// element is inserted .
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :3

//  elements in queue :3	4	5	76
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :1

// enter the  data :23

// element is inserted .
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :1

// enter the  data :89

// queue is overflow.
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :2

// deleted element is :3
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :22

// deleted element is :4
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :
// 2

// deleted element is :5
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :2

// deleted element is :76
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :2

// deleted element is :23
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :2

// queue is empty.
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :6

// enter the valiid choice.
// enter 1.enqueue
// 2.dequeeue
// 3.display
// 4.exit
// enter your choice :4


// === Code Execution Successful ===
